/** Generated by YAKINDU Statechart Tools code generator. */
package smarthub.sc;

import com.yakindu.core.IStatemachine;
import com.yakindu.core.ITimed;
import com.yakindu.core.ITimerService;
import com.yakindu.core.rx.Observable;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingQueue;
import smarthub.sc.LED;

public class SmartLightSystem implements IStatemachine, ITimed {
	public static class WiFi {
		private SmartLightSystem parent;
		
		public WiFi(SmartLightSystem parent) {
			this.parent = parent;
		}
		private boolean confirm;
		
		
		public void raiseConfirm() {
			synchronized(parent) {
				parent.inEventQueue.add(() -> {
					confirm = true;
				});
				parent.runCycle();
			}
		}
		
		private long timeout;
		
		public synchronized long getTimeout() {
			synchronized(parent) {
				return timeout;
			}
		}
		
		public void setTimeout(long value) {
			synchronized(parent) {
				this.timeout = value;
			}
		}
		
		private boolean connected;
		
		public synchronized boolean getConnected() {
			synchronized(parent) {
				return connected;
			}
		}
		
		public void setConnected(boolean value) {
			synchronized(parent) {
				this.connected = value;
			}
		}
		
	}
	
	public static class Server {
		private SmartLightSystem parent;
		
		public Server(SmartLightSystem parent) {
			this.parent = parent;
		}
		private boolean confirm;
		
		
		public void raiseConfirm() {
			synchronized(parent) {
				parent.inEventQueue.add(() -> {
					confirm = true;
				});
				parent.runCycle();
			}
		}
		
		private long timeout;
		
		public synchronized long getTimeout() {
			synchronized(parent) {
				return timeout;
			}
		}
		
		public void setTimeout(long value) {
			synchronized(parent) {
				this.timeout = value;
			}
		}
		
		private boolean connected;
		
		public synchronized boolean getConnected() {
			synchronized(parent) {
				return connected;
			}
		}
		
		public void setConnected(boolean value) {
			synchronized(parent) {
				this.connected = value;
			}
		}
		
	}
	
	public static class Messages {
		private SmartLightSystem parent;
		
		public Messages(SmartLightSystem parent) {
			this.parent = parent;
		}
		private boolean createMessage;
		
		
		public void raiseCreateMessage() {
			synchronized(parent) {
				parent.inEventQueue.add(() -> {
					createMessage = true;
				});
				parent.runCycle();
			}
		}
		
		private long queueSize;
		
		public synchronized long getQueueSize() {
			synchronized(parent) {
				return queueSize;
			}
		}
		
		public void setQueueSize(long value) {
			synchronized(parent) {
				this.queueSize = value;
			}
		}
		
	}
	
	public static class Sensing {
		private SmartLightSystem parent;
		
		public Sensing(SmartLightSystem parent) {
			this.parent = parent;
		}
		private long lightIntensity;
		
		public synchronized long getLightIntensity() {
			synchronized(parent) {
				return lightIntensity;
			}
		}
		
		public void setLightIntensity(long value) {
			synchronized(parent) {
				this.lightIntensity = value;
			}
		}
		
		private long waitTime;
		
		public synchronized long getWaitTime() {
			synchronized(parent) {
				return waitTime;
			}
		}
		
		public void setWaitTime(long value) {
			synchronized(parent) {
				this.waitTime = value;
			}
		}
		
	}
	
	public static class Error {
		private SmartLightSystem parent;
		
		public Error(SmartLightSystem parent) {
			this.parent = parent;
		}
		private boolean enterNormalMode;
		
		
		public void raiseEnterNormalMode() {
			synchronized(parent) {
				parent.inEventQueue.add(() -> {
					enterNormalMode = true;
				});
				parent.runCycle();
			}
		}
		
		private boolean enterNoInternetMode;
		
		
		public void raiseEnterNoInternetMode() {
			synchronized(parent) {
				parent.inEventQueue.add(() -> {
					enterNoInternetMode = true;
				});
				parent.runCycle();
			}
		}
		
		private boolean enterNoServerMode;
		
		
		public void raiseEnterNoServerMode() {
			synchronized(parent) {
				parent.inEventQueue.add(() -> {
					enterNoServerMode = true;
				});
				parent.runCycle();
			}
		}
		
		private boolean reattemptConnect;
		
		
		public void raiseReattemptConnect() {
			synchronized(parent) {
				parent.inEventQueue.add(() -> {
					reattemptConnect = true;
				});
				parent.runCycle();
			}
		}
		
		private long reattemptTime;
		
		public synchronized long getReattemptTime() {
			synchronized(parent) {
				return reattemptTime;
			}
		}
		
		public void setReattemptTime(long value) {
			synchronized(parent) {
				this.reattemptTime = value;
			}
		}
		
		private long mode;
		
		public synchronized long getMode() {
			synchronized(parent) {
				return mode;
			}
		}
		
		public void setMode(long value) {
			synchronized(parent) {
				this.mode = value;
			}
		}
		
	}
	
	public static class Testing {
		private SmartLightSystem parent;
		
		public Testing(SmartLightSystem parent) {
			this.parent = parent;
		}
		private boolean complete;
		
		
		public void raiseComplete() {
			synchronized(parent) {
				parent.inEventQueue.add(() -> {
					complete = true;
				});
				parent.runCycle();
			}
		}
		
		private long count;
		
		public synchronized long getCount() {
			synchronized(parent) {
				return count;
			}
		}
		
		public void setCount(long value) {
			synchronized(parent) {
				this.count = value;
			}
		}
		
		private long waitTime;
		
		public synchronized long getWaitTime() {
			synchronized(parent) {
				return waitTime;
			}
		}
		
		public void setWaitTime(long value) {
			synchronized(parent) {
				this.waitTime = value;
			}
		}
		
	}
	
	protected WiFi wiFi;
	
	protected Server server;
	
	protected Messages messages;
	
	protected Sensing sensing;
	
	protected Error error;
	
	protected Testing testing;
	
	public enum State {
		MAIN_REGION_OPERATINGSMARTLIGHT,
		MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING,
		MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGLED,
		MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGLED_R1__FINAL_,
		MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGLED_R1_BLINKLED,
		MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGWIFILED,
		MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGWIFILED_R1__FINAL_,
		MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGWIFILED_R1_BLINKWIFILED,
		MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGERRORDISPLAY,
		MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGERRORDISPLAY_R1_DISPLAYERRORCODE,
		MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGERRORDISPLAY_R1__FINAL_,
		MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1__FINAL_,
		MAIN_REGION_OPERATINGSMARTLIGHT_R1_LIGHTSENSING,
		MAIN_REGION_OPERATINGSMARTLIGHT_R1_LIGHTSENSING_R1_DARK,
		MAIN_REGION_OPERATINGSMARTLIGHT_R1_LIGHTSENSING_R1_BRIGHT,
		MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE,
		MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_IDLE,
		MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_CONNECTINGTOWIFI,
		MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_SENDINGTOSERVER,
		MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_CONNECTINGTOSERVER,
		MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_STOPPINGCONNECTION,
		MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1__FINAL_,
		MAIN_REGION_OPERATINGSMARTLIGHT_MODE_DISPLAY_DISPLAYINGNORMALMODE,
		MAIN_REGION_OPERATINGSMARTLIGHT_MODE_DISPLAY_DISPLAYINGNOINTERNETMODE,
		MAIN_REGION_OPERATINGSMARTLIGHT_MODE_DISPLAY_DISPLAYINGNOSERVERMODE,
		MAIN_REGION_OPERATINGSMARTLIGHT_MODE_DISPLAY_IDLE,
		MAIN_REGION_OFF,
		$NULLSTATE$
	};
	
	private State[] historyVector = new State[1];
	private final State[] stateVector = new State[2];
	
	private ITimerService timerService;
	
	private final boolean[] timeEvents = new boolean[16];
	
	private BlockingQueue<Runnable> inEventQueue = new LinkedBlockingQueue<Runnable>();
	public static final long tHRESHOLD = 400l;
	
	protected long getTHRESHOLD() {
		synchronized(SmartLightSystem.this) {
			return tHRESHOLD;
		}
	}
	
	
	private boolean isExecuting;
	
	protected boolean getIsExecuting() {
		synchronized(SmartLightSystem.this) {
			return isExecuting;
		}
	}
	
	protected void setIsExecuting(boolean value) {
		synchronized(SmartLightSystem.this) {
			this.isExecuting = value;
		}
	}
	private long stateConfVectorPosition;
	
	protected long getStateConfVectorPosition() {
		synchronized(SmartLightSystem.this) {
			return stateConfVectorPosition;
		}
	}
	
	protected void setStateConfVectorPosition(long value) {
		synchronized(SmartLightSystem.this) {
			this.stateConfVectorPosition = value;
		}
	}
	public SmartLightSystem() {
		wiFi = new WiFi(this);
		server = new Server(this);
		messages = new Messages(this);
		sensing = new Sensing(this);
		error = new Error(this);
		testing = new Testing(this);
		for (int i = 0; i < 2; i++) {
			stateVector[i] = State.$NULLSTATE$;
		}
		for (int i = 0; i < 1; i++) {
			historyVector[i] = State.$NULLSTATE$;
		}
		
		clearInEvents();
		
		wiFi.setTimeout(10l);
		
		wiFi.setConnected(false);
		
		server.setTimeout(10l);
		
		server.setConnected(false);
		
		messages.setQueueSize(0l);
		
		sensing.setLightIntensity(0l);
		
		sensing.setWaitTime(100l);
		
		error.setReattemptTime(15l);
		
		error.setMode(0l);
		
		setLed(null);
		
		setConnectionLed(null);
		
		setErrorLed(0l);
		
		testing.setCount(0l);
		
		testing.setWaitTime(300l);
		
		isExecuting = false;
	}
	
	public synchronized void enter() {
		if (timerService == null) {
			throw new IllegalStateException("Timer service must be set.");
		}
		
		
		if (getIsExecuting()) {
			return;
		}
		isExecuting = true;
		
		enterSequence_main_region_default();
		isExecuting = false;
	}
	
	public synchronized void exit() {
		if (getIsExecuting()) {
			return;
		}
		isExecuting = true;
		
		exitSequence_main_region();
		isExecuting = false;
	}
	
	/**
	 * @see IStatemachine#isActive()
	 */
	public synchronized boolean isActive() {
		return stateVector[0] != State.$NULLSTATE$||stateVector[1] != State.$NULLSTATE$;
	}
	
	/** 
	* Always returns 'false' since this state machine can never become final.
	*
	* @see IStatemachine#isFinal()
	*/
	public synchronized boolean isFinal() {
		return false;
	}
	private void clearInEvents() {
		wiFi.confirm = false;
		server.confirm = false;
		messages.createMessage = false;
		error.enterNormalMode = false;
		error.enterNoInternetMode = false;
		error.enterNoServerMode = false;
		error.reattemptConnect = false;
		initialized = false;
		on = false;
		off = false;
		finishedSending = false;
		testing.complete = false;
		timeEvents[0] = false;
		timeEvents[1] = false;
		timeEvents[2] = false;
		timeEvents[3] = false;
		timeEvents[4] = false;
		timeEvents[5] = false;
		timeEvents[6] = false;
		timeEvents[7] = false;
		timeEvents[8] = false;
		timeEvents[9] = false;
		timeEvents[10] = false;
		timeEvents[11] = false;
		timeEvents[12] = false;
		timeEvents[13] = false;
		timeEvents[14] = false;
		timeEvents[15] = false;
	}
	
	private void microStep() {
		long transitioned = -1l;
		
		stateConfVectorPosition = 0l;
		
		switch (stateVector[0]) {
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGLED_R1__FINAL_:
			transitioned = main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed_r1__final__react(transitioned);
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGLED_R1_BLINKLED:
			transitioned = main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed_r1_BlinkLed_react(transitioned);
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGWIFILED_R1__FINAL_:
			transitioned = main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed_r1__final__react(transitioned);
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGWIFILED_R1_BLINKWIFILED:
			transitioned = main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed_r1_BlinkWiFiLed_react(transitioned);
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGERRORDISPLAY_R1_DISPLAYERRORCODE:
			transitioned = main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay_r1_DisplayErrorCode_react(transitioned);
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGERRORDISPLAY_R1__FINAL_:
			transitioned = main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay_r1__final__react(transitioned);
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1__FINAL_:
			transitioned = main_region_OperatingSmartLight_r1_Initializing_r1__final__react(transitioned);
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_LIGHTSENSING_R1_DARK:
			transitioned = main_region_OperatingSmartLight_r1_LightSensing_r1_Dark_react(transitioned);
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_LIGHTSENSING_R1_BRIGHT:
			transitioned = main_region_OperatingSmartLight_r1_LightSensing_r1_Bright_react(transitioned);
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_IDLE:
			transitioned = main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_Idle_react(transitioned);
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_CONNECTINGTOWIFI:
			transitioned = main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_ConnectingToWiFi_react(transitioned);
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_SENDINGTOSERVER:
			transitioned = main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_SendingToServer_react(transitioned);
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_CONNECTINGTOSERVER:
			transitioned = main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_ConnectingToServer_react(transitioned);
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_STOPPINGCONNECTION:
			transitioned = main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_StoppingConnection_react(transitioned);
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1__FINAL_:
			transitioned = main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1__final__react(transitioned);
			break;
		case MAIN_REGION_OFF:
			transitioned = main_region_off_react(transitioned);
			break;
		default:
			break;
		}
		
		if (getStateConfVectorPosition()<1l) {
			switch (stateVector[1]) {
			case MAIN_REGION_OPERATINGSMARTLIGHT_MODE_DISPLAY_DISPLAYINGNORMALMODE:
				main_region_OperatingSmartLight_mode_display_DisplayingNormalMode_react(transitioned);
				break;
			case MAIN_REGION_OPERATINGSMARTLIGHT_MODE_DISPLAY_DISPLAYINGNOINTERNETMODE:
				main_region_OperatingSmartLight_mode_display_DisplayingNoInternetMode_react(transitioned);
				break;
			case MAIN_REGION_OPERATINGSMARTLIGHT_MODE_DISPLAY_DISPLAYINGNOSERVERMODE:
				main_region_OperatingSmartLight_mode_display_DisplayingNoServerMode_react(transitioned);
				break;
			case MAIN_REGION_OPERATINGSMARTLIGHT_MODE_DISPLAY_IDLE:
				main_region_OperatingSmartLight_mode_display_Idle_react(transitioned);
				break;
			default:
				break;
			}
		}
	}
	
	private void runCycle() {
		if (timerService == null) {
			throw new IllegalStateException("Timer service must be set.");
		}
		
		
		if (getIsExecuting()) {
			return;
		}
		isExecuting = true;
		
		nextEvent();
		do { 
			microStep();
			
			clearInEvents();
			
			nextEvent();
		} while ((((((((((((((((((((((((((((wiFi.confirm || server.confirm) || messages.createMessage) || error.enterNormalMode) || error.enterNoInternetMode) || error.enterNoServerMode) || error.reattemptConnect) || initialized) || on) || off) || finishedSending) || testing.complete) || timeEvents[0]) || timeEvents[1]) || timeEvents[2]) || timeEvents[3]) || timeEvents[4]) || timeEvents[5]) || timeEvents[6]) || timeEvents[7]) || timeEvents[8]) || timeEvents[9]) || timeEvents[10]) || timeEvents[11]) || timeEvents[12]) || timeEvents[13]) || timeEvents[14]) || timeEvents[15]));
		
		isExecuting = false;
	}
	
	protected void nextEvent() {
		if(!inEventQueue.isEmpty()) {
			inEventQueue.poll().run();
			return;
		}
	}
	/**
	* Returns true if the given state is currently active otherwise false.
	*/
	public synchronized boolean isStateActive(State state) {
	
		switch (state) {
		case MAIN_REGION_OPERATINGSMARTLIGHT:
			return stateVector[0].ordinal() >= State.
					MAIN_REGION_OPERATINGSMARTLIGHT.ordinal()&& stateVector[0].ordinal() <= State.MAIN_REGION_OPERATINGSMARTLIGHT_MODE_DISPLAY_IDLE.ordinal();
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING:
			return stateVector[0].ordinal() >= State.
					MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING.ordinal()&& stateVector[0].ordinal() <= State.MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1__FINAL_.ordinal();
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGLED:
			return stateVector[0].ordinal() >= State.
					MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGLED.ordinal()&& stateVector[0].ordinal() <= State.MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGLED_R1_BLINKLED.ordinal();
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGLED_R1__FINAL_:
			return stateVector[0] == State.MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGLED_R1__FINAL_;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGLED_R1_BLINKLED:
			return stateVector[0] == State.MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGLED_R1_BLINKLED;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGWIFILED:
			return stateVector[0].ordinal() >= State.
					MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGWIFILED.ordinal()&& stateVector[0].ordinal() <= State.MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGWIFILED_R1_BLINKWIFILED.ordinal();
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGWIFILED_R1__FINAL_:
			return stateVector[0] == State.MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGWIFILED_R1__FINAL_;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGWIFILED_R1_BLINKWIFILED:
			return stateVector[0] == State.MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGWIFILED_R1_BLINKWIFILED;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGERRORDISPLAY:
			return stateVector[0].ordinal() >= State.
					MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGERRORDISPLAY.ordinal()&& stateVector[0].ordinal() <= State.MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGERRORDISPLAY_R1__FINAL_.ordinal();
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGERRORDISPLAY_R1_DISPLAYERRORCODE:
			return stateVector[0] == State.MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGERRORDISPLAY_R1_DISPLAYERRORCODE;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGERRORDISPLAY_R1__FINAL_:
			return stateVector[0] == State.MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGERRORDISPLAY_R1__FINAL_;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1__FINAL_:
			return stateVector[0] == State.MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1__FINAL_;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_LIGHTSENSING:
			return stateVector[0].ordinal() >= State.
					MAIN_REGION_OPERATINGSMARTLIGHT_R1_LIGHTSENSING.ordinal()&& stateVector[0].ordinal() <= State.MAIN_REGION_OPERATINGSMARTLIGHT_R1_LIGHTSENSING_R1_BRIGHT.ordinal();
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_LIGHTSENSING_R1_DARK:
			return stateVector[0] == State.MAIN_REGION_OPERATINGSMARTLIGHT_R1_LIGHTSENSING_R1_DARK;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_LIGHTSENSING_R1_BRIGHT:
			return stateVector[0] == State.MAIN_REGION_OPERATINGSMARTLIGHT_R1_LIGHTSENSING_R1_BRIGHT;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE:
			return stateVector[0].ordinal() >= State.
					MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE.ordinal()&& stateVector[0].ordinal() <= State.MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1__FINAL_.ordinal();
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_IDLE:
			return stateVector[0] == State.MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_IDLE;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_CONNECTINGTOWIFI:
			return stateVector[0] == State.MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_CONNECTINGTOWIFI;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_SENDINGTOSERVER:
			return stateVector[0] == State.MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_SENDINGTOSERVER;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_CONNECTINGTOSERVER:
			return stateVector[0] == State.MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_CONNECTINGTOSERVER;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_STOPPINGCONNECTION:
			return stateVector[0] == State.MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_STOPPINGCONNECTION;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1__FINAL_:
			return stateVector[0] == State.MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1__FINAL_;
		case MAIN_REGION_OPERATINGSMARTLIGHT_MODE_DISPLAY_DISPLAYINGNORMALMODE:
			return stateVector[1] == State.MAIN_REGION_OPERATINGSMARTLIGHT_MODE_DISPLAY_DISPLAYINGNORMALMODE;
		case MAIN_REGION_OPERATINGSMARTLIGHT_MODE_DISPLAY_DISPLAYINGNOINTERNETMODE:
			return stateVector[1] == State.MAIN_REGION_OPERATINGSMARTLIGHT_MODE_DISPLAY_DISPLAYINGNOINTERNETMODE;
		case MAIN_REGION_OPERATINGSMARTLIGHT_MODE_DISPLAY_DISPLAYINGNOSERVERMODE:
			return stateVector[1] == State.MAIN_REGION_OPERATINGSMARTLIGHT_MODE_DISPLAY_DISPLAYINGNOSERVERMODE;
		case MAIN_REGION_OPERATINGSMARTLIGHT_MODE_DISPLAY_IDLE:
			return stateVector[1] == State.MAIN_REGION_OPERATINGSMARTLIGHT_MODE_DISPLAY_IDLE;
		case MAIN_REGION_OFF:
			return stateVector[0] == State.MAIN_REGION_OFF;
		default:
			return false;
		}
	}
	
	public synchronized void setTimerService(ITimerService timerService) {
		this.timerService = timerService;
	}
	
	public ITimerService getTimerService() {
		return timerService;
	}
	
	public synchronized void raiseTimeEvent(int eventID) {
		inEventQueue.add(() -> {
			timeEvents[eventID] = true;
		});
		runCycle();
	}
	
	public WiFi wiFi() {
		return wiFi;
	}
	
	public Server server() {
		return server;
	}
	
	public Messages messages() {
		return messages;
	}
	
	public Sensing sensing() {
		return sensing;
	}
	
	public Error error() {
		return error;
	}
	
	public Testing testing() {
		return testing;
	}
	
	
	private boolean initialized;
	
	
	public void raiseInitialized() {
		synchronized(SmartLightSystem.this) {
			inEventQueue.add(() -> {
				initialized = true;
			});
			runCycle();
		}
	}
	
	private boolean on;
	
	
	public void raiseOn() {
		synchronized(SmartLightSystem.this) {
			inEventQueue.add(() -> {
				on = true;
			});
			runCycle();
		}
	}
	
	private boolean off;
	
	
	public void raiseOff() {
		synchronized(SmartLightSystem.this) {
			inEventQueue.add(() -> {
				off = true;
			});
			runCycle();
		}
	}
	
	private boolean light_on;
	
	
	protected void raiseLight_on() {
		synchronized(SmartLightSystem.this) {
			light_on = true;
			light_onObservable.next(null);
		}
	}
	
	private Observable<Void> light_onObservable = new Observable<Void>();
	
	public Observable<Void> getLight_on() {
		return light_onObservable;
	}
	
	private boolean light_off;
	
	
	protected void raiseLight_off() {
		synchronized(SmartLightSystem.this) {
			light_off = true;
			light_offObservable.next(null);
		}
	}
	
	private Observable<Void> light_offObservable = new Observable<Void>();
	
	public Observable<Void> getLight_off() {
		return light_offObservable;
	}
	
	private boolean finishedSending;
	
	
	public void raiseFinishedSending() {
		synchronized(SmartLightSystem.this) {
			inEventQueue.add(() -> {
				finishedSending = true;
			});
			runCycle();
		}
	}
	
	private LED led;
	
	public synchronized LED getLed() {
		synchronized(SmartLightSystem.this) {
			return led;
		}
	}
	
	public void setLed(LED value) {
		synchronized(SmartLightSystem.this) {
			this.led = value;
		}
	}
	
	private LED connectionLed;
	
	public synchronized LED getConnectionLed() {
		synchronized(SmartLightSystem.this) {
			return connectionLed;
		}
	}
	
	public void setConnectionLed(LED value) {
		synchronized(SmartLightSystem.this) {
			this.connectionLed = value;
		}
	}
	
	private long errorLed;
	
	public synchronized long getErrorLed() {
		synchronized(SmartLightSystem.this) {
			return errorLed;
		}
	}
	
	public void setErrorLed(long value) {
		synchronized(SmartLightSystem.this) {
			this.errorLed = value;
		}
	}
	
	/* Entry action for state 'OperatingSmartLight'. */
	private void entryAction_main_region_OperatingSmartLight() {
		getLed().enter();
	}
	
	/* Entry action for state 'BlinkLed'. */
	private void entryAction_main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed_r1_BlinkLed() {
		timerService.setTimer(this, 0, testing.getWaitTime(), false);
		
		timerService.setTimer(this, 1, testing.getWaitTime(), false);
		
		getLed().raiseOn();
	}
	
	/* Entry action for state 'BlinkWiFiLed'. */
	private void entryAction_main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed_r1_BlinkWiFiLed() {
		timerService.setTimer(this, 2, testing.getWaitTime(), false);
		
		timerService.setTimer(this, 3, testing.getWaitTime(), false);
		
		getConnectionLed().raiseOn();
	}
	
	/* Entry action for state 'DisplayErrorCode'. */
	private void entryAction_main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay_r1_DisplayErrorCode() {
		timerService.setTimer(this, 4, testing.getWaitTime(), false);
		
		timerService.setTimer(this, 5, testing.getWaitTime(), false);
		
		setErrorLed(testing.count);
	}
	
	/* Entry action for state 'Dark'. */
	private void entryAction_main_region_OperatingSmartLight_r1_LightSensing_r1_Dark() {
		timerService.setTimer(this, 6, sensing.getWaitTime(), false);
		
		timerService.setTimer(this, 7, sensing.getWaitTime(), false);
		
		getLed().raiseOn();
		
		raiseLight_on();
	}
	
	/* Entry action for state 'Bright'. */
	private void entryAction_main_region_OperatingSmartLight_r1_LightSensing_r1_Bright() {
		timerService.setTimer(this, 8, sensing.getWaitTime(), false);
		
		timerService.setTimer(this, 9, sensing.getWaitTime(), false);
		
		getLed().raiseOff();
		
		raiseLight_off();
	}
	
	/* Entry action for state 'Idle'. */
	private void entryAction_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_Idle() {
		timerService.setTimer(this, 10, 200l, false);
		
		getConnectionLed().raiseOff();
		
		error.raiseEnterNormalMode();
	}
	
	/* Entry action for state 'ConnectingToWiFi'. */
	private void entryAction_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_ConnectingToWiFi() {
		timerService.setTimer(this, 11, (wiFi.getTimeout() * 1000l), false);
		
		wiFi.setConnected(true);
	}
	
	/* Entry action for state 'ConnectingToServer'. */
	private void entryAction_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_ConnectingToServer() {
		timerService.setTimer(this, 12, (server.getTimeout() * 1000l), false);
		
		getConnectionLed().raiseOn();
		
		server.setConnected(true);
	}
	
	/* Entry action for state 'StoppingConnection'. */
	private void entryAction_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_StoppingConnection() {
		timerService.setTimer(this, 13, 100l, false);
	}
	
	/* Entry action for state 'DisplayingNormalMode'. */
	private void entryAction_main_region_OperatingSmartLight_mode_display_DisplayingNormalMode() {
		setErrorLed(0l);
	}
	
	/* Entry action for state 'DisplayingNoInternetMode'. */
	private void entryAction_main_region_OperatingSmartLight_mode_display_DisplayingNoInternetMode() {
		timerService.setTimer(this, 14, (error.getReattemptTime() * 1000l), false);
		
		setErrorLed(1l);
	}
	
	/* Entry action for state 'DisplayingNoServerMode'. */
	private void entryAction_main_region_OperatingSmartLight_mode_display_DisplayingNoServerMode() {
		timerService.setTimer(this, 15, (error.getReattemptTime() * 1000l), false);
		
		setErrorLed(2l);
	}
	
	/* Exit action for state 'BlinkLed'. */
	private void exitAction_main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed_r1_BlinkLed() {
		timerService.unsetTimer(this, 0);
		
		timerService.unsetTimer(this, 1);
		
		getLed().raiseOff();
	}
	
	/* Exit action for state 'BlinkWiFiLed'. */
	private void exitAction_main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed_r1_BlinkWiFiLed() {
		timerService.unsetTimer(this, 2);
		
		timerService.unsetTimer(this, 3);
		
		getConnectionLed().raiseOff();
	}
	
	/* Exit action for state 'DisplayErrorCode'. */
	private void exitAction_main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay_r1_DisplayErrorCode() {
		timerService.unsetTimer(this, 4);
		
		timerService.unsetTimer(this, 5);
	}
	
	/* Exit action for state 'Dark'. */
	private void exitAction_main_region_OperatingSmartLight_r1_LightSensing_r1_Dark() {
		timerService.unsetTimer(this, 6);
		
		timerService.unsetTimer(this, 7);
	}
	
	/* Exit action for state 'Bright'. */
	private void exitAction_main_region_OperatingSmartLight_r1_LightSensing_r1_Bright() {
		timerService.unsetTimer(this, 8);
		
		timerService.unsetTimer(this, 9);
	}
	
	/* Exit action for state 'Idle'. */
	private void exitAction_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_Idle() {
		timerService.unsetTimer(this, 10);
	}
	
	/* Exit action for state 'ConnectingToWiFi'. */
	private void exitAction_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_ConnectingToWiFi() {
		timerService.unsetTimer(this, 11);
	}
	
	/* Exit action for state 'SendingToServer'. */
	private void exitAction_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_SendingToServer() {
		messages.setQueueSize(0l);
	}
	
	/* Exit action for state 'ConnectingToServer'. */
	private void exitAction_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_ConnectingToServer() {
		timerService.unsetTimer(this, 12);
	}
	
	/* Exit action for state 'StoppingConnection'. */
	private void exitAction_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_StoppingConnection() {
		timerService.unsetTimer(this, 13);
	}
	
	/* Exit action for state 'DisplayingNoInternetMode'. */
	private void exitAction_main_region_OperatingSmartLight_mode_display_DisplayingNoInternetMode() {
		timerService.unsetTimer(this, 14);
	}
	
	/* Exit action for state 'DisplayingNoServerMode'. */
	private void exitAction_main_region_OperatingSmartLight_mode_display_DisplayingNoServerMode() {
		timerService.unsetTimer(this, 15);
	}
	
	/* 'default' enter sequence for state OperatingSmartLight */
	private void enterSequence_main_region_OperatingSmartLight_default() {
		entryAction_main_region_OperatingSmartLight();
		enterSequence_main_region_OperatingSmartLight_r1_default();
		enterSequence_main_region_OperatingSmartLight_mode_display_default();
	}
	
	/* 'default' enter sequence for state Initializing */
	private void enterSequence_main_region_OperatingSmartLight_r1_Initializing_default() {
		enterSequence_main_region_OperatingSmartLight_r1_Initializing_r1_default();
	}
	
	/* 'default' enter sequence for state TestingLed */
	private void enterSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed_default() {
		enterSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed_r1_default();
	}
	
	/* Default enter sequence for final state */
	private void enterSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed_r1__final__default() {
		stateVector[0] = State.MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGLED_R1__FINAL_;
		stateConfVectorPosition = 0;
	}
	
	/* 'default' enter sequence for state BlinkLed */
	private void enterSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed_r1_BlinkLed_default() {
		entryAction_main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed_r1_BlinkLed();
		stateVector[0] = State.MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGLED_R1_BLINKLED;
		stateConfVectorPosition = 0;
	}
	
	/* 'default' enter sequence for state TestingWiFiLed */
	private void enterSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed_default() {
		enterSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed_r1_default();
	}
	
	/* Default enter sequence for final state */
	private void enterSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed_r1__final__default() {
		stateVector[0] = State.MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGWIFILED_R1__FINAL_;
		stateConfVectorPosition = 0;
	}
	
	/* 'default' enter sequence for state BlinkWiFiLed */
	private void enterSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed_r1_BlinkWiFiLed_default() {
		entryAction_main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed_r1_BlinkWiFiLed();
		stateVector[0] = State.MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGWIFILED_R1_BLINKWIFILED;
		stateConfVectorPosition = 0;
	}
	
	/* 'default' enter sequence for state TestingErrorDisplay */
	private void enterSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay_default() {
		enterSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay_r1_default();
	}
	
	/* 'default' enter sequence for state DisplayErrorCode */
	private void enterSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay_r1_DisplayErrorCode_default() {
		entryAction_main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay_r1_DisplayErrorCode();
		stateVector[0] = State.MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGERRORDISPLAY_R1_DISPLAYERRORCODE;
		stateConfVectorPosition = 0;
	}
	
	/* Default enter sequence for final state */
	private void enterSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay_r1__final__default() {
		stateVector[0] = State.MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGERRORDISPLAY_R1__FINAL_;
		stateConfVectorPosition = 0;
	}
	
	/* Default enter sequence for final state */
	private void enterSequence_main_region_OperatingSmartLight_r1_Initializing_r1__final__default() {
		stateVector[0] = State.MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1__FINAL_;
		stateConfVectorPosition = 0;
	}
	
	/* 'default' enter sequence for state LightSensing */
	private void enterSequence_main_region_OperatingSmartLight_r1_LightSensing_default() {
		enterSequence_main_region_OperatingSmartLight_r1_LightSensing_r1_default();
	}
	
	/* 'default' enter sequence for state Dark */
	private void enterSequence_main_region_OperatingSmartLight_r1_LightSensing_r1_Dark_default() {
		entryAction_main_region_OperatingSmartLight_r1_LightSensing_r1_Dark();
		stateVector[0] = State.MAIN_REGION_OPERATINGSMARTLIGHT_R1_LIGHTSENSING_R1_DARK;
		stateConfVectorPosition = 0;
		
		historyVector[0] = stateVector[0];
	}
	
	/* 'default' enter sequence for state Bright */
	private void enterSequence_main_region_OperatingSmartLight_r1_LightSensing_r1_Bright_default() {
		entryAction_main_region_OperatingSmartLight_r1_LightSensing_r1_Bright();
		stateVector[0] = State.MAIN_REGION_OPERATINGSMARTLIGHT_R1_LIGHTSENSING_R1_BRIGHT;
		stateConfVectorPosition = 0;
		
		historyVector[0] = stateVector[0];
	}
	
	/* 'default' enter sequence for state CommunicatingSmartLightState */
	private void enterSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_default() {
		enterSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_default();
	}
	
	/* 'default' enter sequence for state Idle */
	private void enterSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_Idle_default() {
		entryAction_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_Idle();
		stateVector[0] = State.MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_IDLE;
		stateConfVectorPosition = 0;
	}
	
	/* 'default' enter sequence for state ConnectingToWiFi */
	private void enterSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_ConnectingToWiFi_default() {
		entryAction_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_ConnectingToWiFi();
		stateVector[0] = State.MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_CONNECTINGTOWIFI;
		stateConfVectorPosition = 0;
	}
	
	/* 'default' enter sequence for state SendingToServer */
	private void enterSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_SendingToServer_default() {
		stateVector[0] = State.MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_SENDINGTOSERVER;
		stateConfVectorPosition = 0;
	}
	
	/* 'default' enter sequence for state ConnectingToServer */
	private void enterSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_ConnectingToServer_default() {
		entryAction_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_ConnectingToServer();
		stateVector[0] = State.MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_CONNECTINGTOSERVER;
		stateConfVectorPosition = 0;
	}
	
	/* 'default' enter sequence for state StoppingConnection */
	private void enterSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_StoppingConnection_default() {
		entryAction_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_StoppingConnection();
		stateVector[0] = State.MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_STOPPINGCONNECTION;
		stateConfVectorPosition = 0;
	}
	
	/* Default enter sequence for final state */
	private void enterSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1__final__default() {
		stateVector[0] = State.MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1__FINAL_;
		stateConfVectorPosition = 0;
	}
	
	/* 'default' enter sequence for state DisplayingNormalMode */
	private void enterSequence_main_region_OperatingSmartLight_mode_display_DisplayingNormalMode_default() {
		entryAction_main_region_OperatingSmartLight_mode_display_DisplayingNormalMode();
		stateVector[1] = State.MAIN_REGION_OPERATINGSMARTLIGHT_MODE_DISPLAY_DISPLAYINGNORMALMODE;
		stateConfVectorPosition = 1;
	}
	
	/* 'default' enter sequence for state DisplayingNoInternetMode */
	private void enterSequence_main_region_OperatingSmartLight_mode_display_DisplayingNoInternetMode_default() {
		entryAction_main_region_OperatingSmartLight_mode_display_DisplayingNoInternetMode();
		stateVector[1] = State.MAIN_REGION_OPERATINGSMARTLIGHT_MODE_DISPLAY_DISPLAYINGNOINTERNETMODE;
		stateConfVectorPosition = 1;
	}
	
	/* 'default' enter sequence for state DisplayingNoServerMode */
	private void enterSequence_main_region_OperatingSmartLight_mode_display_DisplayingNoServerMode_default() {
		entryAction_main_region_OperatingSmartLight_mode_display_DisplayingNoServerMode();
		stateVector[1] = State.MAIN_REGION_OPERATINGSMARTLIGHT_MODE_DISPLAY_DISPLAYINGNOSERVERMODE;
		stateConfVectorPosition = 1;
	}
	
	/* 'default' enter sequence for state Idle */
	private void enterSequence_main_region_OperatingSmartLight_mode_display_Idle_default() {
		stateVector[1] = State.MAIN_REGION_OPERATINGSMARTLIGHT_MODE_DISPLAY_IDLE;
		stateConfVectorPosition = 1;
	}
	
	/* 'default' enter sequence for state off */
	private void enterSequence_main_region_off_default() {
		stateVector[0] = State.MAIN_REGION_OFF;
		stateConfVectorPosition = 0;
	}
	
	/* 'default' enter sequence for region main region */
	private void enterSequence_main_region_default() {
		react_main_region__entry_Default();
	}
	
	/* 'default' enter sequence for region r1 */
	private void enterSequence_main_region_OperatingSmartLight_r1_default() {
		react_main_region_OperatingSmartLight_r1__entry_Default();
	}
	
	/* 'default' enter sequence for region r1 */
	private void enterSequence_main_region_OperatingSmartLight_r1_Initializing_r1_default() {
		react_main_region_OperatingSmartLight_r1_Initializing_r1__entry_Default();
	}
	
	/* 'default' enter sequence for region r1 */
	private void enterSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed_r1_default() {
		react_main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed_r1__entry_Default();
	}
	
	/* 'default' enter sequence for region r1 */
	private void enterSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed_r1_default() {
		react_main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed_r1__entry_Default();
	}
	
	/* 'default' enter sequence for region r1 */
	private void enterSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay_r1_default() {
		react_main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay_r1__entry_Default();
	}
	
	/* 'default' enter sequence for region r1 */
	private void enterSequence_main_region_OperatingSmartLight_r1_LightSensing_r1_default() {
		react_main_region_OperatingSmartLight_r1_LightSensing_r1__entry_Default();
	}
	
	/* shallow enterSequence with history in child r1 */
	private void shallowEnterSequence_main_region_OperatingSmartLight_r1_LightSensing_r1() {
		switch (historyVector[0]) {
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_LIGHTSENSING_R1_DARK:
			enterSequence_main_region_OperatingSmartLight_r1_LightSensing_r1_Dark_default();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_LIGHTSENSING_R1_BRIGHT:
			enterSequence_main_region_OperatingSmartLight_r1_LightSensing_r1_Bright_default();
			break;
		default:
			break;
		}
	}
	
	/* 'default' enter sequence for region r1 */
	private void enterSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_default() {
		react_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1__entry_Default();
	}
	
	/* 'default' enter sequence for region mode_display */
	private void enterSequence_main_region_OperatingSmartLight_mode_display_default() {
		react_main_region_OperatingSmartLight_mode_display__entry_Default();
	}
	
	/* Default exit sequence for state OperatingSmartLight */
	private void exitSequence_main_region_OperatingSmartLight() {
		exitSequence_main_region_OperatingSmartLight_r1();
		exitSequence_main_region_OperatingSmartLight_mode_display();
	}
	
	/* Default exit sequence for state Initializing */
	private void exitSequence_main_region_OperatingSmartLight_r1_Initializing() {
		exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1();
	}
	
	/* Default exit sequence for state TestingLed */
	private void exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed() {
		exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed_r1();
	}
	
	/* Default exit sequence for final state. */
	private void exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed_r1__final_() {
		stateVector[0] = State.$NULLSTATE$;
		stateConfVectorPosition = 0;
	}
	
	/* Default exit sequence for state BlinkLed */
	private void exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed_r1_BlinkLed() {
		stateVector[0] = State.$NULLSTATE$;
		stateConfVectorPosition = 0;
		
		exitAction_main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed_r1_BlinkLed();
	}
	
	/* Default exit sequence for state TestingWiFiLed */
	private void exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed() {
		exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed_r1();
	}
	
	/* Default exit sequence for final state. */
	private void exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed_r1__final_() {
		stateVector[0] = State.$NULLSTATE$;
		stateConfVectorPosition = 0;
	}
	
	/* Default exit sequence for state BlinkWiFiLed */
	private void exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed_r1_BlinkWiFiLed() {
		stateVector[0] = State.$NULLSTATE$;
		stateConfVectorPosition = 0;
		
		exitAction_main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed_r1_BlinkWiFiLed();
	}
	
	/* Default exit sequence for state TestingErrorDisplay */
	private void exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay() {
		exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay_r1();
	}
	
	/* Default exit sequence for state DisplayErrorCode */
	private void exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay_r1_DisplayErrorCode() {
		stateVector[0] = State.$NULLSTATE$;
		stateConfVectorPosition = 0;
		
		exitAction_main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay_r1_DisplayErrorCode();
	}
	
	/* Default exit sequence for final state. */
	private void exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay_r1__final_() {
		stateVector[0] = State.$NULLSTATE$;
		stateConfVectorPosition = 0;
	}
	
	/* Default exit sequence for final state. */
	private void exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1__final_() {
		stateVector[0] = State.$NULLSTATE$;
		stateConfVectorPosition = 0;
	}
	
	/* Default exit sequence for state LightSensing */
	private void exitSequence_main_region_OperatingSmartLight_r1_LightSensing() {
		exitSequence_main_region_OperatingSmartLight_r1_LightSensing_r1();
	}
	
	/* Default exit sequence for state Dark */
	private void exitSequence_main_region_OperatingSmartLight_r1_LightSensing_r1_Dark() {
		stateVector[0] = State.$NULLSTATE$;
		stateConfVectorPosition = 0;
		
		exitAction_main_region_OperatingSmartLight_r1_LightSensing_r1_Dark();
	}
	
	/* Default exit sequence for state Bright */
	private void exitSequence_main_region_OperatingSmartLight_r1_LightSensing_r1_Bright() {
		stateVector[0] = State.$NULLSTATE$;
		stateConfVectorPosition = 0;
		
		exitAction_main_region_OperatingSmartLight_r1_LightSensing_r1_Bright();
	}
	
	/* Default exit sequence for state CommunicatingSmartLightState */
	private void exitSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState() {
		exitSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1();
	}
	
	/* Default exit sequence for state Idle */
	private void exitSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_Idle() {
		stateVector[0] = State.$NULLSTATE$;
		stateConfVectorPosition = 0;
		
		exitAction_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_Idle();
	}
	
	/* Default exit sequence for state ConnectingToWiFi */
	private void exitSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_ConnectingToWiFi() {
		stateVector[0] = State.$NULLSTATE$;
		stateConfVectorPosition = 0;
		
		exitAction_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_ConnectingToWiFi();
	}
	
	/* Default exit sequence for state SendingToServer */
	private void exitSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_SendingToServer() {
		stateVector[0] = State.$NULLSTATE$;
		stateConfVectorPosition = 0;
		
		exitAction_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_SendingToServer();
	}
	
	/* Default exit sequence for state ConnectingToServer */
	private void exitSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_ConnectingToServer() {
		stateVector[0] = State.$NULLSTATE$;
		stateConfVectorPosition = 0;
		
		exitAction_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_ConnectingToServer();
	}
	
	/* Default exit sequence for state StoppingConnection */
	private void exitSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_StoppingConnection() {
		stateVector[0] = State.$NULLSTATE$;
		stateConfVectorPosition = 0;
		
		exitAction_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_StoppingConnection();
	}
	
	/* Default exit sequence for final state. */
	private void exitSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1__final_() {
		stateVector[0] = State.$NULLSTATE$;
		stateConfVectorPosition = 0;
	}
	
	/* Default exit sequence for state DisplayingNormalMode */
	private void exitSequence_main_region_OperatingSmartLight_mode_display_DisplayingNormalMode() {
		stateVector[1] = State.$NULLSTATE$;
		stateConfVectorPosition = 1;
	}
	
	/* Default exit sequence for state DisplayingNoInternetMode */
	private void exitSequence_main_region_OperatingSmartLight_mode_display_DisplayingNoInternetMode() {
		stateVector[1] = State.$NULLSTATE$;
		stateConfVectorPosition = 1;
		
		exitAction_main_region_OperatingSmartLight_mode_display_DisplayingNoInternetMode();
	}
	
	/* Default exit sequence for state DisplayingNoServerMode */
	private void exitSequence_main_region_OperatingSmartLight_mode_display_DisplayingNoServerMode() {
		stateVector[1] = State.$NULLSTATE$;
		stateConfVectorPosition = 1;
		
		exitAction_main_region_OperatingSmartLight_mode_display_DisplayingNoServerMode();
	}
	
	/* Default exit sequence for state Idle */
	private void exitSequence_main_region_OperatingSmartLight_mode_display_Idle() {
		stateVector[1] = State.$NULLSTATE$;
		stateConfVectorPosition = 1;
	}
	
	/* Default exit sequence for state off */
	private void exitSequence_main_region_off() {
		stateVector[0] = State.$NULLSTATE$;
		stateConfVectorPosition = 0;
	}
	
	/* Default exit sequence for region main region */
	private void exitSequence_main_region() {
		switch (stateVector[0]) {
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGLED_R1__FINAL_:
			exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed_r1__final_();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGLED_R1_BLINKLED:
			exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed_r1_BlinkLed();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGWIFILED_R1__FINAL_:
			exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed_r1__final_();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGWIFILED_R1_BLINKWIFILED:
			exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed_r1_BlinkWiFiLed();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGERRORDISPLAY_R1_DISPLAYERRORCODE:
			exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay_r1_DisplayErrorCode();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGERRORDISPLAY_R1__FINAL_:
			exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay_r1__final_();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1__FINAL_:
			exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1__final_();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_LIGHTSENSING_R1_DARK:
			exitSequence_main_region_OperatingSmartLight_r1_LightSensing_r1_Dark();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_LIGHTSENSING_R1_BRIGHT:
			exitSequence_main_region_OperatingSmartLight_r1_LightSensing_r1_Bright();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_IDLE:
			exitSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_Idle();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_CONNECTINGTOWIFI:
			exitSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_ConnectingToWiFi();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_SENDINGTOSERVER:
			exitSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_SendingToServer();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_CONNECTINGTOSERVER:
			exitSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_ConnectingToServer();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_STOPPINGCONNECTION:
			exitSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_StoppingConnection();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1__FINAL_:
			exitSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1__final_();
			break;
		case MAIN_REGION_OFF:
			exitSequence_main_region_off();
			break;
		default:
			break;
		}
		
		switch (stateVector[1]) {
		case MAIN_REGION_OPERATINGSMARTLIGHT_MODE_DISPLAY_DISPLAYINGNORMALMODE:
			exitSequence_main_region_OperatingSmartLight_mode_display_DisplayingNormalMode();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_MODE_DISPLAY_DISPLAYINGNOINTERNETMODE:
			exitSequence_main_region_OperatingSmartLight_mode_display_DisplayingNoInternetMode();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_MODE_DISPLAY_DISPLAYINGNOSERVERMODE:
			exitSequence_main_region_OperatingSmartLight_mode_display_DisplayingNoServerMode();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_MODE_DISPLAY_IDLE:
			exitSequence_main_region_OperatingSmartLight_mode_display_Idle();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r1 */
	private void exitSequence_main_region_OperatingSmartLight_r1() {
		switch (stateVector[0]) {
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGLED_R1__FINAL_:
			exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed_r1__final_();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGLED_R1_BLINKLED:
			exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed_r1_BlinkLed();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGWIFILED_R1__FINAL_:
			exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed_r1__final_();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGWIFILED_R1_BLINKWIFILED:
			exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed_r1_BlinkWiFiLed();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGERRORDISPLAY_R1_DISPLAYERRORCODE:
			exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay_r1_DisplayErrorCode();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGERRORDISPLAY_R1__FINAL_:
			exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay_r1__final_();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1__FINAL_:
			exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1__final_();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_LIGHTSENSING_R1_DARK:
			exitSequence_main_region_OperatingSmartLight_r1_LightSensing_r1_Dark();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_LIGHTSENSING_R1_BRIGHT:
			exitSequence_main_region_OperatingSmartLight_r1_LightSensing_r1_Bright();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_IDLE:
			exitSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_Idle();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_CONNECTINGTOWIFI:
			exitSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_ConnectingToWiFi();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_SENDINGTOSERVER:
			exitSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_SendingToServer();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_CONNECTINGTOSERVER:
			exitSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_ConnectingToServer();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_STOPPINGCONNECTION:
			exitSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_StoppingConnection();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1__FINAL_:
			exitSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1__final_();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r1 */
	private void exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1() {
		switch (stateVector[0]) {
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGLED_R1__FINAL_:
			exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed_r1__final_();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGLED_R1_BLINKLED:
			exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed_r1_BlinkLed();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGWIFILED_R1__FINAL_:
			exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed_r1__final_();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGWIFILED_R1_BLINKWIFILED:
			exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed_r1_BlinkWiFiLed();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGERRORDISPLAY_R1_DISPLAYERRORCODE:
			exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay_r1_DisplayErrorCode();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGERRORDISPLAY_R1__FINAL_:
			exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay_r1__final_();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1__FINAL_:
			exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1__final_();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r1 */
	private void exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed_r1() {
		switch (stateVector[0]) {
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGLED_R1__FINAL_:
			exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed_r1__final_();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGLED_R1_BLINKLED:
			exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed_r1_BlinkLed();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r1 */
	private void exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed_r1() {
		switch (stateVector[0]) {
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGWIFILED_R1__FINAL_:
			exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed_r1__final_();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGWIFILED_R1_BLINKWIFILED:
			exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed_r1_BlinkWiFiLed();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r1 */
	private void exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay_r1() {
		switch (stateVector[0]) {
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGERRORDISPLAY_R1_DISPLAYERRORCODE:
			exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay_r1_DisplayErrorCode();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_INITIALIZING_R1_TESTINGERRORDISPLAY_R1__FINAL_:
			exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay_r1__final_();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r1 */
	private void exitSequence_main_region_OperatingSmartLight_r1_LightSensing_r1() {
		switch (stateVector[0]) {
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_LIGHTSENSING_R1_DARK:
			exitSequence_main_region_OperatingSmartLight_r1_LightSensing_r1_Dark();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_LIGHTSENSING_R1_BRIGHT:
			exitSequence_main_region_OperatingSmartLight_r1_LightSensing_r1_Bright();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r1 */
	private void exitSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1() {
		switch (stateVector[0]) {
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_IDLE:
			exitSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_Idle();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_CONNECTINGTOWIFI:
			exitSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_ConnectingToWiFi();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_SENDINGTOSERVER:
			exitSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_SendingToServer();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_CONNECTINGTOSERVER:
			exitSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_ConnectingToServer();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1_STOPPINGCONNECTION:
			exitSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_StoppingConnection();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_R1_COMMUNICATINGSMARTLIGHTSTATE_R1__FINAL_:
			exitSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1__final_();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region mode_display */
	private void exitSequence_main_region_OperatingSmartLight_mode_display() {
		switch (stateVector[1]) {
		case MAIN_REGION_OPERATINGSMARTLIGHT_MODE_DISPLAY_DISPLAYINGNORMALMODE:
			exitSequence_main_region_OperatingSmartLight_mode_display_DisplayingNormalMode();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_MODE_DISPLAY_DISPLAYINGNOINTERNETMODE:
			exitSequence_main_region_OperatingSmartLight_mode_display_DisplayingNoInternetMode();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_MODE_DISPLAY_DISPLAYINGNOSERVERMODE:
			exitSequence_main_region_OperatingSmartLight_mode_display_DisplayingNoServerMode();
			break;
		case MAIN_REGION_OPERATINGSMARTLIGHT_MODE_DISPLAY_IDLE:
			exitSequence_main_region_OperatingSmartLight_mode_display_Idle();
			break;
		default:
			break;
		}
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region__entry_Default() {
		enterSequence_main_region_off_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_OperatingSmartLight_r1_Initializing_r1__entry_Default() {
		enterSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed_r1__entry_Default() {
		testing.setCount(0l);
		
		enterSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed_r1_BlinkLed_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed_r1__entry_Default() {
		testing.setCount(0l);
		
		enterSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed_r1_BlinkWiFiLed_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay_r1__entry_Default() {
		testing.setCount(0l);
		
		enterSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay_r1_DisplayErrorCode_default();
	}
	
	/* Default react sequence for shallow history entry  */
	private void react_main_region_OperatingSmartLight_r1_LightSensing_r1__entry_Default() {
		/* Enter the region with shallow history */
		if (historyVector[0] != State.$NULLSTATE$) {
			shallowEnterSequence_main_region_OperatingSmartLight_r1_LightSensing_r1();
		} else {
			enterSequence_main_region_OperatingSmartLight_r1_LightSensing_r1_Dark_default();
		}
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_OperatingSmartLight_r1__entry_Default() {
		enterSequence_main_region_OperatingSmartLight_r1_Initializing_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1__entry_Default() {
		enterSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_Idle_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_OperatingSmartLight_mode_display__entry_Default() {
		enterSequence_main_region_OperatingSmartLight_mode_display_Idle_default();
	}
	
	private long react(long transitioned_before) {
		return transitioned_before;
	}
	
	private long main_region_OperatingSmartLight_react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<0l) {
			if (off) {
				exitSequence_main_region_OperatingSmartLight();
				enterSequence_main_region_off_default();
				react(0l);
				
				transitioned_after = 1l;
			}
		}
		/* If no transition was taken then execute local reactions */
		if (transitioned_after==transitioned_before) {
			transitioned_after = react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_OperatingSmartLight_r1_Initializing_react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<0l) {
			if (initialized) {
				exitSequence_main_region_OperatingSmartLight_r1_Initializing();
				enterSequence_main_region_OperatingSmartLight_r1_LightSensing_default();
				transitioned_after = 0l;
			}
		}
		return transitioned_after;
	}
	
	private long main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed_react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<0l) {
			if (testing.complete) {
				exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed();
				enterSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed_default();
				main_region_OperatingSmartLight_r1_Initializing_react(0l);
				
				transitioned_after = 0l;
			}
		}
		/* If no transition was taken then execute local reactions */
		if (transitioned_after==transitioned_before) {
			transitioned_after = main_region_OperatingSmartLight_r1_Initializing_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed_r1__final__react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<0l) {
		}
		/* If no transition was taken then execute local reactions */
		if (transitioned_after==transitioned_before) {
			transitioned_after = main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed_r1_BlinkLed_react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<0l) {
			if (((timeEvents[0]) && (testing.getCount()<3l))) {
				exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed_r1_BlinkLed();
				testing.setCount(testing.getCount() + 1l);
				
				timeEvents[0] = false;
				enterSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed_r1_BlinkLed_default();
				main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed_react(0l);
				
				transitioned_after = 0l;
			} else {
				if (((timeEvents[1]) && (testing.getCount()>=3l))) {
					exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed_r1_BlinkLed();
					testing.raiseComplete();
					
					timeEvents[1] = false;
					enterSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed_r1__final__default();
					transitioned_after = 0l;
				}
			}
		}
		/* If no transition was taken then execute local reactions */
		if (transitioned_after==transitioned_before) {
			transitioned_after = main_region_OperatingSmartLight_r1_Initializing_r1_TestingLed_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed_react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<0l) {
			if (testing.complete) {
				exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed();
				enterSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay_default();
				main_region_OperatingSmartLight_r1_Initializing_react(0l);
				
				transitioned_after = 0l;
			}
		}
		/* If no transition was taken then execute local reactions */
		if (transitioned_after==transitioned_before) {
			transitioned_after = main_region_OperatingSmartLight_r1_Initializing_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed_r1__final__react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<0l) {
		}
		/* If no transition was taken then execute local reactions */
		if (transitioned_after==transitioned_before) {
			transitioned_after = main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed_r1_BlinkWiFiLed_react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<0l) {
			if (((timeEvents[2]) && (testing.getCount()<3l))) {
				exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed_r1_BlinkWiFiLed();
				testing.setCount(testing.getCount() + 1l);
				
				timeEvents[2] = false;
				enterSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed_r1_BlinkWiFiLed_default();
				main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed_react(0l);
				
				transitioned_after = 0l;
			} else {
				if (((timeEvents[3]) && (testing.getCount()>=3l))) {
					exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed_r1_BlinkWiFiLed();
					testing.raiseComplete();
					
					timeEvents[3] = false;
					enterSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed_r1__final__default();
					transitioned_after = 0l;
				}
			}
		}
		/* If no transition was taken then execute local reactions */
		if (transitioned_after==transitioned_before) {
			transitioned_after = main_region_OperatingSmartLight_r1_Initializing_r1_TestingWiFiLed_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay_react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<0l) {
			if (testing.complete) {
				exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay();
				raiseInitialized();
				
				enterSequence_main_region_OperatingSmartLight_r1_Initializing_r1__final__default();
				transitioned_after = 0l;
			}
		}
		/* If no transition was taken then execute local reactions */
		if (transitioned_after==transitioned_before) {
			transitioned_after = main_region_OperatingSmartLight_r1_Initializing_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay_r1_DisplayErrorCode_react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<0l) {
			if (((timeEvents[4]) && (testing.getCount()>=2l))) {
				exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay_r1_DisplayErrorCode();
				testing.raiseComplete();
				
				timeEvents[4] = false;
				enterSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay_r1__final__default();
				transitioned_after = 0l;
			} else {
				if (((timeEvents[5]) && (testing.getCount()<2l))) {
					exitSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay_r1_DisplayErrorCode();
					testing.setCount(testing.getCount() + 1l);
					
					timeEvents[5] = false;
					enterSequence_main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay_r1_DisplayErrorCode_default();
					main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay_react(0l);
					
					transitioned_after = 0l;
				}
			}
		}
		/* If no transition was taken then execute local reactions */
		if (transitioned_after==transitioned_before) {
			transitioned_after = main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay_r1__final__react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<0l) {
		}
		/* If no transition was taken then execute local reactions */
		if (transitioned_after==transitioned_before) {
			transitioned_after = main_region_OperatingSmartLight_r1_Initializing_r1_TestingErrorDisplay_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_OperatingSmartLight_r1_Initializing_r1__final__react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<0l) {
		}
		/* If no transition was taken then execute local reactions */
		if (transitioned_after==transitioned_before) {
			transitioned_after = main_region_OperatingSmartLight_r1_Initializing_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_OperatingSmartLight_r1_LightSensing_react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<0l) {
			if (((messages.createMessage) && (getErrorLed()==0l))) {
				exitSequence_main_region_OperatingSmartLight_r1_LightSensing();
				enterSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_default();
				transitioned_after = 0l;
			} else {
				if (((messages.createMessage) && (getErrorLed()!=0l))) {
					exitSequence_main_region_OperatingSmartLight_r1_LightSensing();
					messages.setQueueSize(messages.getQueueSize() + 1l);
					
					enterSequence_main_region_OperatingSmartLight_r1_LightSensing_default();
					transitioned_after = 0l;
				} else {
					if (error.reattemptConnect) {
						exitSequence_main_region_OperatingSmartLight_r1_LightSensing();
						enterSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_default();
						transitioned_after = 0l;
					}
				}
			}
		}
		return transitioned_after;
	}
	
	private long main_region_OperatingSmartLight_r1_LightSensing_r1_Dark_react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<0l) {
			if (((timeEvents[6]) && (sensing.getLightIntensity()>=getTHRESHOLD()))) {
				exitSequence_main_region_OperatingSmartLight_r1_LightSensing_r1_Dark();
				messages.raiseCreateMessage();
				
				timeEvents[6] = false;
				enterSequence_main_region_OperatingSmartLight_r1_LightSensing_r1_Bright_default();
				main_region_OperatingSmartLight_r1_LightSensing_react(0l);
				
				transitioned_after = 0l;
			} else {
				if (((timeEvents[7]) && (sensing.getLightIntensity()<getTHRESHOLD()))) {
					exitSequence_main_region_OperatingSmartLight_r1_LightSensing_r1_Dark();
					messages.raiseCreateMessage();
					
					timeEvents[7] = false;
					enterSequence_main_region_OperatingSmartLight_r1_LightSensing_r1_Dark_default();
					main_region_OperatingSmartLight_r1_LightSensing_react(0l);
					
					transitioned_after = 0l;
				} else {
					if (getLed().getOverheat()) {
						exitSequence_main_region_OperatingSmartLight_r1_LightSensing_r1_Dark();
						enterSequence_main_region_OperatingSmartLight_r1_LightSensing_r1_Bright_default();
						main_region_OperatingSmartLight_r1_LightSensing_react(0l);
						
						transitioned_after = 0l;
					}
				}
			}
		}
		/* If no transition was taken then execute local reactions */
		if (transitioned_after==transitioned_before) {
			transitioned_after = main_region_OperatingSmartLight_r1_LightSensing_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_OperatingSmartLight_r1_LightSensing_r1_Bright_react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<0l) {
			if (((timeEvents[8]) && (sensing.getLightIntensity()<getTHRESHOLD()))) {
				exitSequence_main_region_OperatingSmartLight_r1_LightSensing_r1_Bright();
				messages.raiseCreateMessage();
				
				timeEvents[8] = false;
				enterSequence_main_region_OperatingSmartLight_r1_LightSensing_r1_Dark_default();
				main_region_OperatingSmartLight_r1_LightSensing_react(0l);
				
				transitioned_after = 0l;
			} else {
				if (((timeEvents[9]) && (sensing.getLightIntensity()>=getTHRESHOLD()))) {
					exitSequence_main_region_OperatingSmartLight_r1_LightSensing_r1_Bright();
					messages.raiseCreateMessage();
					
					timeEvents[9] = false;
					enterSequence_main_region_OperatingSmartLight_r1_LightSensing_r1_Bright_default();
					main_region_OperatingSmartLight_r1_LightSensing_react(0l);
					
					transitioned_after = 0l;
				}
			}
		}
		/* If no transition was taken then execute local reactions */
		if (transitioned_after==transitioned_before) {
			transitioned_after = main_region_OperatingSmartLight_r1_LightSensing_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<0l) {
			if (finishedSending) {
				exitSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState();
				enterSequence_main_region_OperatingSmartLight_r1_LightSensing_default();
				transitioned_after = 0l;
			} else {
				if (error.enterNoInternetMode) {
					exitSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState();
					enterSequence_main_region_OperatingSmartLight_r1_LightSensing_default();
					transitioned_after = 0l;
				} else {
					if (error.enterNoServerMode) {
						exitSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState();
						enterSequence_main_region_OperatingSmartLight_r1_LightSensing_default();
						transitioned_after = 0l;
					}
				}
			}
		}
		return transitioned_after;
	}
	
	private long main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_Idle_react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<0l) {
			if (timeEvents[10]) {
				exitSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_Idle();
				timeEvents[10] = false;
				enterSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_ConnectingToWiFi_default();
				main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_react(0l);
				
				transitioned_after = 0l;
			}
		}
		/* If no transition was taken then execute local reactions */
		if (transitioned_after==transitioned_before) {
			transitioned_after = main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_ConnectingToWiFi_react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<0l) {
			if (wiFi.confirm) {
				exitSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_ConnectingToWiFi();
				enterSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_ConnectingToServer_default();
				main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_react(0l);
				
				transitioned_after = 0l;
			} else {
				if (timeEvents[11]) {
					exitSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_ConnectingToWiFi();
					error.raiseEnterNoInternetMode();
					
					timeEvents[11] = false;
					enterSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_StoppingConnection_default();
					main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_react(0l);
					
					transitioned_after = 0l;
				}
			}
		}
		/* If no transition was taken then execute local reactions */
		if (transitioned_after==transitioned_before) {
			transitioned_after = main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_SendingToServer_react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<0l) {
			if (server.confirm) {
				exitSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_SendingToServer();
				error.raiseEnterNormalMode();
				
				enterSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_StoppingConnection_default();
				main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_react(0l);
				
				transitioned_after = 0l;
			}
		}
		/* If no transition was taken then execute local reactions */
		if (transitioned_after==transitioned_before) {
			transitioned_after = main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_ConnectingToServer_react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<0l) {
			if (server.confirm) {
				exitSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_ConnectingToServer();
				enterSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_SendingToServer_default();
				main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_react(0l);
				
				transitioned_after = 0l;
			} else {
				if (timeEvents[12]) {
					exitSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_ConnectingToServer();
					error.raiseEnterNoServerMode();
					
					timeEvents[12] = false;
					enterSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_StoppingConnection_default();
					main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_react(0l);
					
					transitioned_after = 0l;
				}
			}
		}
		/* If no transition was taken then execute local reactions */
		if (transitioned_after==transitioned_before) {
			transitioned_after = main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_StoppingConnection_react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<0l) {
			if (timeEvents[13]) {
				exitSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1_StoppingConnection();
				raiseFinishedSending();
				
				timeEvents[13] = false;
				enterSequence_main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1__final__default();
				transitioned_after = 0l;
			}
		}
		/* If no transition was taken then execute local reactions */
		if (transitioned_after==transitioned_before) {
			transitioned_after = main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_r1__final__react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<0l) {
		}
		/* If no transition was taken then execute local reactions */
		if (transitioned_after==transitioned_before) {
			transitioned_after = main_region_OperatingSmartLight_r1_CommunicatingSmartLightState_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_OperatingSmartLight_mode_display_DisplayingNormalMode_react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<1l) {
			if (error.enterNoInternetMode) {
				exitSequence_main_region_OperatingSmartLight_mode_display_DisplayingNormalMode();
				enterSequence_main_region_OperatingSmartLight_mode_display_DisplayingNoInternetMode_default();
				main_region_OperatingSmartLight_react(0l);
				
				transitioned_after = 1l;
			} else {
				if (error.enterNoServerMode) {
					exitSequence_main_region_OperatingSmartLight_mode_display_DisplayingNormalMode();
					enterSequence_main_region_OperatingSmartLight_mode_display_DisplayingNoServerMode_default();
					main_region_OperatingSmartLight_react(0l);
					
					transitioned_after = 1l;
				}
			}
		}
		/* If no transition was taken then execute local reactions */
		if (transitioned_after==transitioned_before) {
			transitioned_after = main_region_OperatingSmartLight_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_OperatingSmartLight_mode_display_DisplayingNoInternetMode_react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<1l) {
			if (error.enterNoServerMode) {
				exitSequence_main_region_OperatingSmartLight_mode_display_DisplayingNoInternetMode();
				enterSequence_main_region_OperatingSmartLight_mode_display_DisplayingNoServerMode_default();
				main_region_OperatingSmartLight_react(0l);
				
				transitioned_after = 1l;
			} else {
				if (error.enterNormalMode) {
					exitSequence_main_region_OperatingSmartLight_mode_display_DisplayingNoInternetMode();
					enterSequence_main_region_OperatingSmartLight_mode_display_DisplayingNormalMode_default();
					main_region_OperatingSmartLight_react(0l);
					
					transitioned_after = 1l;
				}
			}
		}
		/* If no transition was taken then execute local reactions */
		if (transitioned_after==transitioned_before) {
			if (timeEvents[14]) {
				error.raiseReattemptConnect();
			}
			transitioned_after = main_region_OperatingSmartLight_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_OperatingSmartLight_mode_display_DisplayingNoServerMode_react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<1l) {
			if (error.enterNoInternetMode) {
				exitSequence_main_region_OperatingSmartLight_mode_display_DisplayingNoServerMode();
				enterSequence_main_region_OperatingSmartLight_mode_display_DisplayingNoInternetMode_default();
				main_region_OperatingSmartLight_react(0l);
				
				transitioned_after = 1l;
			} else {
				if (error.enterNormalMode) {
					exitSequence_main_region_OperatingSmartLight_mode_display_DisplayingNoServerMode();
					enterSequence_main_region_OperatingSmartLight_mode_display_DisplayingNormalMode_default();
					main_region_OperatingSmartLight_react(0l);
					
					transitioned_after = 1l;
				}
			}
		}
		/* If no transition was taken then execute local reactions */
		if (transitioned_after==transitioned_before) {
			if (timeEvents[15]) {
				error.raiseReattemptConnect();
			}
			transitioned_after = main_region_OperatingSmartLight_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_OperatingSmartLight_mode_display_Idle_react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<1l) {
			if (initialized) {
				exitSequence_main_region_OperatingSmartLight_mode_display_Idle();
				enterSequence_main_region_OperatingSmartLight_mode_display_DisplayingNormalMode_default();
				main_region_OperatingSmartLight_react(0l);
				
				transitioned_after = 1l;
			}
		}
		/* If no transition was taken then execute local reactions */
		if (transitioned_after==transitioned_before) {
			transitioned_after = main_region_OperatingSmartLight_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_off_react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<0l) {
			if (on) {
				exitSequence_main_region_off();
				enterSequence_main_region_OperatingSmartLight_default();
				react(0l);
				
				transitioned_after = 0l;
			}
		}
		/* If no transition was taken then execute local reactions */
		if (transitioned_after==transitioned_before) {
			transitioned_after = react(transitioned_before);
		}
		return transitioned_after;
	}
	
}
